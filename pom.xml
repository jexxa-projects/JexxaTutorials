<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

    <name>JexxaTutorials</name>
    <groupId>io.jexxa.tutorials</groupId>
    <version>2.0.18-SNAPSHOT</version>
    <artifactId>jexxatutorials</artifactId>
    <packaging>pom</packaging>

    <url>https://www.jexxa.io</url>

    <description>JexxaTutorials - Typical use cases for Jexxa</description>
    <licenses>
        <license>
            <name>The Unlicense</name>
            <url>https://unlicense.org</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Michael Repplinger</name>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/jexxa-projects/JexxaTutorials.git</connection>
        <url>https://github.com/jexxa-projects/JexxaTutorials</url>
        <developerConnection>scm:git:https://github.com/jexxa-projects/JexxaTutorials.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <image.repository.root>ghcr.io/jexxa-projects</image.repository.root>
        <main.class>${project.groupId}.${project.name}</main.class>
        <main.http.port>7500</main.http.port>
        <main.https.port>8081</main.https.port>
        <docker.base.image>eclipse-temurin:17-alpine</docker.base.image>
        <docker.user>guest</docker.user> <!-- Defines the user running the application inside the container. Note: This user must be already created inside the base image -->

        <!-- target/compiler configuration  -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>17</maven.compiler.release>

        <!-- version of dependencies -->
        <jexxa.release.version>6.1.3</jexxa.release.version>
        <addend.version>2.0.0</addend.version>
        <activemq.artemis.client.version>2.29.0</activemq.artemis.client.version>
        <postgres.version>42.6.0</postgres.version>
        <slf4j.simple.version>2.0.7</slf4j.simple.version>
        <commons.lang3.version>3.12.0</commons.lang3.version>

        <!-- version of test dependencies -->
        <junit.platform.launcher.version>1.9.3</junit.platform.launcher.version>
        <junit.jupiter.engine.version>5.9.3</junit.jupiter.engine.version>
        <junit.jupiter.params.version>5.10.0</junit.jupiter.params.version>
        <awaitility.version>4.2.0</awaitility.version>
        <unirest.java.version>3.14.5</unirest.java.version>

        <!-- server-name used in mavens settings.xml to find to your repository credentials -->
        <project.scm.id>github</project.scm.id>

        <!--information for filtered sources  -->
        <build.timestamp>${maven.build.timestamp}</build.timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

        <!--version of  maven plugins  -->
        <maven.clean.plugin>3.3.1</maven.clean.plugin>
        <maven.compiler.plugin>3.11.0</maven.compiler.plugin>
        <maven.deploy.plugin>3.1.1</maven.deploy.plugin>
        <maven.failsafe.plugin>3.1.2</maven.failsafe.plugin>
        <maven.install.plugin>3.1.1</maven.install.plugin>
        <maven.jar.plugin>3.3.0</maven.jar.plugin>
        <maven.resources.plugin>3.3.1</maven.resources.plugin>
        <maven.site.plugin>3.12.1</maven.site.plugin>
        <maven.surefire.plugin>3.1.2</maven.surefire.plugin>
        <maven.release.plugin>3.0.0-M1</maven.release.plugin>
        <maven.jacoco.plugin>0.8.10</maven.jacoco.plugin>
        <maven.reports.plugin>3.4.5</maven.reports.plugin>
        <maven.enforcer.plugin>3.3.0</maven.enforcer.plugin>
        <maven.javadoc.plugin>3.2.0</maven.javadoc.plugin>
        <maven.versions.plugin>2.16.0</maven.versions.plugin>
        <maven.build.helper.version>3.4.0</maven.build.helper.version>
        <maven.jib.plugin>3.3.2</maven.jib.plugin>
        <maven.shade.plugin>3.5.0</maven.shade.plugin>

    </properties>

    <dependencies>
        <!-- dependencies for application core -->
        <dependency>
            <groupId>io.jexxa</groupId>
            <artifactId>jexxa-web</artifactId>
            <version>${jexxa.release.version}</version>
        </dependency>

        <dependency>
            <groupId>io.jexxa.addend</groupId>
            <artifactId>Addend</artifactId>
            <version>${addend.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.simple.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-jms-client</artifactId>
            <version>${activemq.artemis.client.version}</version>
        </dependency>

        <!-- dependencies for tests -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit.platform.launcher.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.engine.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.params.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.jexxa.jexxatest</groupId>
            <artifactId>jexxa-test</artifactId>
            <version>${jexxa.release.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.konghq</groupId>
            <artifactId>unirest-java</artifactId>
            <version>${unirest.java.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- ********************************************************************** -->
    <!-- IMPORTANT: Change following lines only if you are familiar with maven  -->
    <!-- IMPORTANT: If you really need to adjust following lines, please check  -->
    <!-- IMPORTANT: if you should start your maven project.                     -->
    <!-- ********************************************************************** -->
    <profiles>
        <profile>     <!-- add tag developer image -->
            <id>localDockerImage</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <dockerTag>developerImage</dockerTag>
                <dockerMajorTag>developerImage</dockerMajorTag>
                <dockerMajorMinorTag>developerImage</dockerMajorMinorTag>
            </properties>
        </profile>
        <profile>
            <id>dockerDeveloperTags</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>

                    <!-- When calling maven release:prepare and release:perform execute only install and NOT deploy. Deploy publishes the image
                         which should be bone by build server-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <configuration>
                            <goals>install</goals>
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                        </configuration>
                    </plugin>
                </plugins>

            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin}</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin}</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven.reports.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.build.helper.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${maven.versions.plugin}</version>
                    <configuration>
                        <!--suppress UnresolvedMavenProperty -->
                        <rulesUri>file:///${session.executionRootDirectory}/mavenVersionRules.xml</rulesUri>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!-- Sets all docker tags -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsedVersion</propertyPrefix>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>validate</phase>

                        <!-- Sets dockerTag to snapshot or latest -->
                        <id>set-docker-image-tag</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>dockerTag</name>
                            <value>${project.version} snapshot latest</value>
                            <regex>(?=.*SNAPSHOT).*(snapshot).*|.*(latest).*</regex>
                            <replacement>$1$2</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>validate</phase>

                        <!-- Sets dockerTag to snapshot or latest -->
                        <id>set-dockerMajorTag-tag</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>dockerMajorTag</name>
                            <value>${project.version} snapshot latest</value>
                            <regex>(?=.*SNAPSHOT).*(snapshot).*|.*(latest).*</regex>
                            <!--suppress UnresolvedMavenProperty -->
                            <replacement>${parsedVersion.majorVersion}.$1$2</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>validate</phase>

                        <!-- Sets dockerTag to snapshot or latest -->
                        <id>set-dockerMajorMinor-tag</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>dockerMajorMinorTag</name>
                            <value>${project.version} snapshot latest</value>
                            <regex>(?=.*SNAPSHOT).*(snapshot).*|.*(latest).*</regex>
                            <!--suppress UnresolvedMavenProperty -->
                            <replacement>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.$1$2</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin}</version>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <!-- Property failsafeArgLine is set from failsafe plugin-->
                    <argLine>${failsafeArgLine}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>

                        <configuration>

                            <finalName>${project.artifactId}-jar-with-dependencies</finalName>

                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>about.html</exclude>
                                        <exclude>META-INF/MANIFEST.MF</exclude>
                                        <exclude>META-INF/*.txt</exclude>
                                        <exclude>META-INF/NOTICE</exclude>
                                        <exclude>META-INF/LICENSE</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>io.jexxa:jexxa-core</artifact>
                                    <excludes>
                                        <exclude>*.properties</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>io.jexxa:jexxa-core</artifact>
                                    <excludes>
                                        <exclude>*.properties</exclude>
                                    </excludes>
                                </filter>

                                <filter>
                                    <artifact>org.eclipse.jetty:*</artifact>
                                    <excludes>
                                        <exclude>**/encoding.properties</exclude>
                                    </excludes>
                                </filter>
                            </filters>

                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main.class}</mainClass>
                                </transformer>
                            </transformers>

                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>

                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin> <!-- build a docker image -->
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${maven.jib.plugin}</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <from>
                        <image>${docker.base.image}</image>
                    </from>
                    <to>
                        <image>${image.repository.root}/${project.artifactId}:${project.version}</image>
                        <tags>
                            <!--suppress UnresolvedMavenProperty -->
                            <tag>${dockerTag}</tag>
                            <!--suppress UnresolvedMavenProperty -->
                            <tag>${dockerMajorTag}</tag>
                            <!--suppress UnresolvedMavenProperty -->
                            <tag>${dockerMajorMinorTag}</tag>
                        </tags>
                    </to>
                    <container>
                        <creationTime>
                            USE_CURRENT_TIMESTAMP
                        </creationTime>

                        <ports>
                            <port>${main.http.port}</port>
                            <port>${main.https.port}</port>
                        </ports>
                        <user>
                            ${docker.user}
                        </user>
                    </container>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>
        </plugins>

    </build>

  <modules>
    <module>HelloJexxa</module>
    <module>TimeService</module>
    <module>BookStore</module>
    <module>ContractManagement</module>
  </modules>

</project>
